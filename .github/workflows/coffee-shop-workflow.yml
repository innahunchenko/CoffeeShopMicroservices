name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_CORE_VERSION: 7.0.x
  RESOURCE_GROUP: backend
  CONTAINER_REGISTRY_NAME: coffeshopbackend
  CONTAINER_REGISTRY_LOGIN_SERVER: coffeshopbackend.azurecr.io
  CONTAINER_APP_NAME: coffee-shop-backend
  TAG: ${{ github.sha }}

jobs:
  BuildAndDeployContainerApp:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.MANAGEDENV20250219184953_SPN }}

      - name: Log in to ACR
        uses: docker/login-action@v3
        with:   
          registry: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push Docker images to ACR using Docker Compose
        run: |
            docker-compose -f ./src/docker-compose.yml build --no-cache \
              --build-arg CONTAINER_REGISTRY_LOGIN_SERVER=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} \
              --build-arg TAG=${{ env.TAG }}

            docker-compose -f ./src/docker-compose.yml push

            #Import base images
            #az acr import --name ${CONTAINER_REGISTRY_NAME} --source docker.io/library/postgres:latest --image postgres
            # az acr import --name ${CONTAINER_REGISTRY_NAME} --source docker.io/library/redis:latest --image redis
            #az acr import --name ${CONTAINER_REGISTRY_NAME} --source mcr.microsoft.com/mssql/server:2019-latest --image catalogdb            
            #az acr import --name ${CONTAINER_REGISTRY_NAME} --source mcr.microsoft.com/mssql/server:2019-latest --image orderdb
            #az acr import --name ${CONTAINER_REGISTRY_NAME} --source mcr.microsoft.com/mssql/server:2019-latest --image identitydb
            
            
            # docker images

            # docker tag mcr.microsoft.com/mssql/server:2019-latest coffeeshopbackend.azurecr.io/mssql/server:2019-latest
            # docker tag redis:latest coffeeshopbackend.azurecr.io/redis:latest
            
            # docker images
            
            # docker push coffeshopbackend.azurecr.io/mssql/server:2019-latest
            # docker push coffeshopbackend.azurecr.io/redis:latest

      # - name: Azure Login
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Deploy multiple containers with YAML
      #   uses: azure/cli-action@v1
      #   with:
      #     inlineScript: |
      #       EXISTING_APP=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --query "name" --output tsv || echo "")

      #       if [ -z "$EXISTING_APP" ]; then
      #           az containerapp create --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CONTAINER_APP_NAME }} --yaml ./src/containerapp.yaml
      #       else
      #           az containerapp update --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CONTAINER_APP_NAME }} --yaml ./src/containerapp.yaml
      #       fi
            
