on:
  push:
    branches:
    - main
  workflow_dispatch:

env:
  DOTNET_CORE_VERSION: 7.0.x
  CONTAINER_APP_ENVIRONMENT_NAME: managedEnv20250219184953
  RESOURCE_GROUP: coffee-shop-backend
  CONTAINER_REGISTRY_NAME: coffeeshopbackend
  CONTAINER_REGISTRY_LOGIN_SERVER: coffeeshopbackend.azurecr.io
  CONTAINER_APP_NAME: coffee-shop-aca

jobs:
  SetupAzureResources:
    runs-on: ubuntu-latest
    steps:
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.managedEnv20250219184953_SPN }}
    
    - name: Create Azure Container Registry (if not exists)
      run: |
        az acr show --name ${{ env.CONTAINER_REGISTRY_NAME }} || \
        az acr create --name ${{ env.CONTAINER_REGISTRY_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --sku Basic
    
    - name: Create Azure Container App (if not exists)
      run: |
        az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} || \
        az containerapp create --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --environment ${{ env.CONTAINER_APP_ENVIRONMENT_NAME }} \
          --image nginx \
          --target-port 80 \
          --ingress external

  BuildAndDeployContainerApp:
    runs-on: ubuntu-latest
    needs: SetupAzureResources
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 
    
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    
    - name: Install docker-compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: List files in a specific directory
      run: ls -l ./src 
    
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.managedEnv20250219184953_SPN }}
      
    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.CONTAINER_REGISTRY_NAME }}

    - name: Build and push Docker images using Docker Compose
      run: |
        TAG=${{ github.sha }}

        echo "TAG is set to: $TAG"
        echo "Logging in to Azure Container Registry"
    
        docker-compose -f ./src/docker-compose.yml build --no-cache

        docker tag catalog.api ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/catalogapi:$TAG
        docker push ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/catalogapi:$TAG

        docker tag shoppingCart.api ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/shoppingcartapi:$TAG
        docker push ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/shoppingcartapi:$TAG

        docker tag apigateway ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigateway:$TAG
        docker push ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigateway:$TAG

        docker tag ordering.api ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/orderingapi:$TAG
        docker push ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/orderingapi:$TAG

        docker tag auth.api ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/authapi:$TAG
        docker push ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/authapi:$TAG

    - name: Deploy containers to Azure Container Apps
      run: |
        TAG=${{ github.sha }}
    
        az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} \
          --add-container name=catalogapi image=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/catalogapi:$TAG \
          --add-container name=shoppingcartapi image=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/shoppingcartapi:$TAG \
          --add-container name=apigateway image=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/apigateway:$TAG \
          --add-container name=orderingapi image=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/orderingapi:$TAG \
          --add-container name=authapi image=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/authapi:$TAG
