version: '3.4'

services:
  # catalogdb:
  #   image: mcr.microsoft.com/mssql/server:2019-latest

  # distributedcache:
  #   image: redis

  # catalog.api:
  #   build:
  #     context: .
  #     dockerfile: Services/Catalog/Catalog.API/Dockerfile
  #     args:
  #       CONTAINER_REGISTRY_LOGIN_SERVER: ${CONTAINER_REGISTRY_LOGIN_SERVER}
  #       TAG: ${TAG}
  #   image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/catalogapi:${TAG}

  # shoppingCartdb:
  #   image: postgres
    
  # shoppingCart.api:
  #   build:
  #     context: .
  #     dockerfile: Services/ShoppingCart/ShoppingCart.API/Dockerfile
  #     args:
  #       CONTAINER_REGISTRY_LOGIN_SERVER: ${CONTAINER_REGISTRY_LOGIN_SERVER}
  #       TAG: ${TAG}
  #   image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/shoppingcartapi:${TAG}
  
  # messagebroker:
  #   image: rabbitmq:management

  apigateway:
    build:
      context: .
      dockerfile: ApiGateway/ApiGateway/Dockerfile
      args:
        CONTAINER_REGISTRY_LOGIN_SERVER: ${CONTAINER_REGISTRY_LOGIN_SERVER}
        TAG: ${TAG}
    image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/apigateway:${TAG}

  # orderdb:
  #   image: mcr.microsoft.com/mssql/server

  # ordering.api:
  #   build:
  #     context: .
  #     dockerfile: Services/Ordering/Ordering.API/Dockerfile
  #     args:
  #       CONTAINER_REGISTRY_LOGIN_SERVER: ${CONTAINER_REGISTRY_LOGIN_SERVER}
  #       TAG: ${TAG}
  #   image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/orderingapi:${TAG}
  
  # identitydb:
  #   image: mcr.microsoft.com/mssql/server:2019-latest

  # auth.api:
  #   build:
  #     context: .
  #     dockerfile: Services/Auth/Auth.API/Dockerfile
  #     args:
  #       CONTAINER_REGISTRY_LOGIN_SERVER: ${CONTAINER_REGISTRY_LOGIN_SERVER}
  #       TAG: ${TAG}
  #   image: ${CONTAINER_REGISTRY_LOGIN_SERVER}/authapi:${TAG}

volumes:
  mssql_catalog:
  postgres_shoppingcart:
 